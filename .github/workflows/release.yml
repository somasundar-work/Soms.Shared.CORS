name: Build and Release Library

on:
  push:
    paths:
      - Soms.Shared.Cors/**
    branches:
      - main
      - release/*
      - hotfix/*
      - feature/*

permissions:
  contents: write  

jobs:
  release:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        dotnet-version: [8.x, 9.x] 

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1
        with:
          versionSpec: '5.x'

      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v1
        with:
          configFilePath: './.github/GitVersioning.yml'  

      - name: Print GitVersion Outputs
        run: |
          echo "GitVersion SemVer: ${{ steps.gitversion.outputs.SemVer }}"
          echo "GitVersion FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
          echo "GitVersion NuGet Version: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"
          echo "Major: ${{ steps.gitversion.outputs.Major }}"
          echo "Minor: ${{ steps.gitversion.outputs.Minor }}"
          echo "Patch: ${{ steps.gitversion.outputs.Patch }}"

      - name: Extract .NET Major Version
        id: extract_dotnet_major
        run: |
          DOTNET_MAJOR=$(echo "${{ matrix.dotnet-version }}" | cut -d'.' -f1)
          echo "DOTNET_MAJOR=$DOTNET_MAJOR" >> $GITHUB_ENV
          echo "Extracted .NET Major Version: $DOTNET_MAJOR"

      - name: Construct Custom Version
        id: custom_version
        run: |
          VERSION="${{ env.DOTNET_MAJOR }}.${{ steps.gitversion.outputs.Minor }}.${{ steps.gitversion.outputs.Patch }}"
          echo "CUSTOM_VERSION=$VERSION" >> $GITHUB_ENV
          echo "Constructed Custom Version: $VERSION"

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Pack
        run: |
          dotnet pack Soms.Shared.Cors/Soms.Shared.Cors.csproj \
            --configuration Release \
            --output ./artifacts \
            /p:PackageVersion=${{ env.CUSTOM_VERSION }}

      - name: Push to NuGet (nuget.org)
        run: dotnet nuget push ./artifacts/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.CUSTOM_VERSION }} 
          name: Release ${{ env.CUSTOM_VERSION }}
          files: ./artifacts/*.nupkg